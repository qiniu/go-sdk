// THIS FILE IS GENERATED BY api-generator, DO NOT EDIT DIRECTLY!

// 列举子账号可用服务
package get_user_available_services

import (
	"encoding/json"
	credentials "github.com/qiniu/go-sdk/v7/storagev2/credentials"
	errors "github.com/qiniu/go-sdk/v7/storagev2/errors"
)

// 调用 API 所用的请求
type Request struct {
	Alias       string                          // 子账号别名
	Credentials credentials.CredentialsProvider // 鉴权参数，用于生成鉴权凭证，如果为空，则使用 HTTPClientOptions 中的 CredentialsProvider
}

// 获取 API 所用的响应
type Response struct {
	Data Services // IAM 子账号可用服务信息
}

// 可用服务列表
type Services = []string

// 返回的 IAM 子账号可用服务列表响应
type GetIamUserAvailableServicesResp = Response
type jsonResponse struct {
	Data Services `json:"data"` // IAM 子账号可用服务信息
}

func (j *Response) MarshalJSON() ([]byte, error) {
	if err := j.validate(); err != nil {
		return nil, err
	}
	return json.Marshal(&jsonResponse{Data: j.Data})
}
func (j *Response) UnmarshalJSON(data []byte) error {
	var nj jsonResponse
	if err := json.Unmarshal(data, &nj); err != nil {
		return err
	}
	j.Data = nj.Data
	return nil
}
func (j *Response) validate() error {
	if len(j.Data) == 0 {
		return errors.MissingRequiredFieldError{Name: "Data"}
	}
	return nil
}
