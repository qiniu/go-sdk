// THIS FILE IS GENERATED BY api-generator, DO NOT EDIT DIRECTLY!

// 获取存储空间的域名列表
package get_bucket_domains_v3

import (
	"encoding/json"
	credentials "github.com/qiniu/go-sdk/v7/storagev2/credentials"
	errors "github.com/qiniu/go-sdk/v7/storagev2/errors"
)

// 调用 API 所用的请求
type Request struct {
	BucketName  string                          // 要获取域名列表的目标空间名称
	Credentials credentials.CredentialsProvider // 鉴权参数，用于生成鉴权凭证，如果为空，则使用 HTTPClientOptions 中的 CredentialsProvider
}

// 获取 API 所用的响应
type Response struct {
	DomainInfos DomainInfos // 存储空间的域名信息列表
}

// 存储空间的域名信息
type DomainInfo struct {
	Domain      string // 域名
	Bucket      string // 存储空间名称
	OwnerId     int64  // 用户 UID
	AutoRefresh bool   // 是否自动刷新
	CreatedTime int64  // 域名创建时间
	UpdatedTime int64  // 域名更新时间
}
type jsonDomainInfo struct {
	Domain      string `json:"domain"`  // 域名
	Bucket      string `json:"tbl"`     // 存储空间名称
	OwnerId     int64  `json:"uid"`     // 用户 UID
	AutoRefresh bool   `json:"refresh"` // 是否自动刷新
	CreatedTime int64  `json:"ctime"`   // 域名创建时间
	UpdatedTime int64  `json:"utime"`   // 域名更新时间
}

func (j *DomainInfo) MarshalJSON() ([]byte, error) {
	if err := j.validate(); err != nil {
		return nil, err
	}
	return json.Marshal(&jsonDomainInfo{Domain: j.Domain, Bucket: j.Bucket, OwnerId: j.OwnerId, AutoRefresh: j.AutoRefresh, CreatedTime: j.CreatedTime, UpdatedTime: j.UpdatedTime})
}
func (j *DomainInfo) UnmarshalJSON(data []byte) error {
	var nj jsonDomainInfo
	if err := json.Unmarshal(data, &nj); err != nil {
		return err
	}
	j.Domain = nj.Domain
	j.Bucket = nj.Bucket
	j.OwnerId = nj.OwnerId
	j.AutoRefresh = nj.AutoRefresh
	j.CreatedTime = nj.CreatedTime
	j.UpdatedTime = nj.UpdatedTime
	return nil
}
func (j *DomainInfo) validate() error {
	if j.Domain == "" {
		return errors.MissingRequiredFieldError{Name: "Domain"}
	}
	if j.Bucket == "" {
		return errors.MissingRequiredFieldError{Name: "Bucket"}
	}
	if j.OwnerId == 0 {
		return errors.MissingRequiredFieldError{Name: "OwnerId"}
	}
	if j.CreatedTime == 0 {
		return errors.MissingRequiredFieldError{Name: "CreatedTime"}
	}
	if j.UpdatedTime == 0 {
		return errors.MissingRequiredFieldError{Name: "UpdatedTime"}
	}
	return nil
}

// 存储空间的域名信息列表
type DomainInfos []DomainInfo

func (j *Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(j.DomainInfos)
}
func (j *Response) UnmarshalJSON(data []byte) error {
	var array DomainInfos
	if err := json.Unmarshal(data, &array); err != nil {
		return err
	}
	j.DomainInfos = array
	return nil
}
